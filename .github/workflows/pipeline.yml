name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  Build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node: [ '12', '14' ]
    steps:
      - uses: actions/checkout@v2
      - name: Fetch tags for GitVersion
        run: git fetch --tags
      - name: GitVersion
        id: gitversion  # step id used as reference for output values
        uses: roryprimrose/rungitversion@master
      - name: Output version values 
        run: |
          echo "Major: ${{ steps.gitversion.outputs.Major }}"
          echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.PreReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.PreReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.WeightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.BuildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.BuildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.FullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.LegacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.LegacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.BranchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.Sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.ShortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.NuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.NuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.NuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.VersionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.CommitDate }}"
      - name: Setup node v${{ matrix.node }}
        uses: actions/setup-node@v2 # https://github.com/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
      - run: |
          npm install
      - run: |
          npm run all

  Test: # run just the tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node: [ '12', '14' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node v${{ matrix.node }}
        uses: actions/setup-node@v2 # https://github.com/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npm run build
      - run: npm test

  Execute: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node: [ '12', '14' ]
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Setup node v${{ matrix.node }}
        uses: actions/setup-node@v2 # https://github.com/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
      - name: Execute action Relabeler
        uses: ./
        with:
          milliseconds: 1200
          repositoryToken: ${{ secrets.GITHUB_TOKEN }}
